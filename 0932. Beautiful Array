// 2*n-1 + 2*n
// 乘：2A[k] != A[i]+A[j] : 2(A[k]X) != (A[i]X)+(A[j]X)
// 加：2A[k] != A[i] + A[j] : 2A[k]+X != A[i]+A[j]+X : 2(A[k]+X/2) != (A[i]+X/2) + (A[j]+X/2) : 平移
class Solution {
public:
    vector<int> beautifulArray(int N) {
        vector<int> cur;
        cur.push_back(1);
        int curSize = 1;
        while (curSize < N) {
            vector<int> v1;
            vector<int> v2;
            for (int& n: cur) {
                v1.push_back(2*n-1);
                v2.push_back(2*n);
            }
            cur.clear();
            for (int& n: v1) {
                if (n <= N) {
                    cur.push_back(n);
                }
            } 
            for (int& n: v2) {
                if (n <= N) {
                    cur.push_back(n);
                }
            }
            curSize = cur.size();
        }
        
        return cur;
    }
};
