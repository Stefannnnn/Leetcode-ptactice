class Solution {
public:
    int minAreaRect(vector<vector<int>>& points) {
        int len = points.size();
        unordered_map<int,unordered_set<int>> Map; // row: vector<col>
        for (int i = 0; i < len; i++) {
            Map[points[i][0]].insert(points[i][1]);
        }
        
        int ans = INT_MAX;
        for (int i = 0; i < len; i++) {
            for (int j = i+1; j < len; j++) {
                if (points[i][0] != points[j][0] && points[i][1] != points[j][1]) {
                    if (Map[points[i][0]].count(points[j][1]) > 0 && Map[points[j][0]].count(points[i][1]) > 0 ) {
                        ans = min(ans,abs(points[i][0] -points[j][0]) * abs(points[i][1] - points[j][1]));                
                    }
                } 
            }
        }
        
        return ans == INT_MAX ? 0 : ans;
    }
};
