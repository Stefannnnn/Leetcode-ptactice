/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        /* Use one pointer points to root, use one pointer points to current, also move l1 and l2 when it is needed */
        if (!l1) {
            return l2;
        } else if (!l2) {
            return l1;
        }
        ListNode* root;
        if (l1->val <= l2->val) {
            root = l1;
            l1 = l1->next;
        } else {
            root = l2;
            l2 = l2->next;
        }
        ListNode* curPoint = root;
        while (l1 && l2) {
            if (l1->val <= l2->val) {
                curPoint->next = l1;
                curPoint = curPoint->next;
                l1 = l1->next;
            } else {
                curPoint->next = l2;
                curPoint = curPoint->next;
                l2 = l2->next;
            }
        }
        
        if (l1) {
            curPoint->next = l1;
        } else if (l2) {
            curPoint->next = l2;
        }
        
        
        return root;
    }
};
