class TwoSum {
public:
    /** Initialize your data structure here. */
    unordered_map<int,int> Map;
    
    
    TwoSum() {
        
    }
    
    /** Add the number to an internal data structure.. */
    void add(int number) {
        Map[number]++;
    }
    
    /** Find if there exists any pair of numbers which sum is equal to the value. */
    bool find(int value) {
        unordered_map<int,int>::iterator iter;
        for (iter = Map.begin(); iter != Map.end(); iter++) {
            if (Map.count(value - iter->first) && (iter->first != (value - iter->first) || iter->second > 1)) {
                return true;
            }
        }
        return false;
    }
};

/**
 * Your TwoSum object will be instantiated and called as such:
 * TwoSum* obj = new TwoSum();
 * obj->add(number);
 * bool param_2 = obj->find(value);
 */
