class Solution {
public:
    int minHeightShelves(vector<vector<int>>& books, int shelf_width) {
        int len = books.size();
        
        int accumulateWidth[len+1];
        int count = 0;
        accumulateWidth[0] = 0;
        for (int i = 1; i <= len; i++) {
            count += books[i-1][0];
            accumulateWidth[i] = count;
        }
        
        vector<int> dp(len+1,INT_MAX);
        dp[0] = 0;
        for (int i = 1; i <= len; i++) {    // the 'i'th book
            int curShelfHeightest = 0;
            for (int numBooks = 1; numBooks <= i; numBooks++) {
                int curWidth = accumulateWidth[i] - accumulateWidth[i-numBooks];
                if (curWidth > shelf_width) {
                    break;
                } 
                curShelfHeightest = max(curShelfHeightest,books[i-numBooks][1]);
                int tempHeight = curShelfHeightest + dp[i-numBooks];
                dp[i] = min(dp[i],tempHeight);
            }
        }
        
        return dp[len];
    }
};
 
